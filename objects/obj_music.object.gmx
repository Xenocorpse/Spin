<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start

intro = 0;

high_playing = 0;

intro_fade_in_index = 0;
snd_track_1_index = 0;
snd_track_1_high_index = 0;
snd_track_1_low_index = 0;
snd_track_1_mid_index = 0;
snd_track_1_snare_index = 0;

audio_play_sound(snd_track_2, 1, true);

//snd_track_1_snare_index = audio_play_sound(snd_track_1_snare, 3, true);

//intro_index = audio_play_sound(snd_intro, 10, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///music logic

//show_debug_message(audio_sound_get_track_position(intro_index));
/*
if((audio_sound_get_track_position(intro_index) &gt;= 1.2) &amp;&amp; (intro == 0))
{
    intro_fade_in_index = audio_play_sound(snd_intro_music_fade_in, 1, false);
    intro = 1;
}
if(!audio_is_playing(intro_fade_in_index) &amp;&amp; (intro == 1))
{
    audio_play_sound(snd_intro_music, 1, true);
    intro = 2;
}
*/
/*
if(keyboard_check(ord('Q')) &amp;&amp; (high_playing == 0))
{
    snd_track_1_high_index = audio_play_sound(snd_track_1_high, 4, true);
    audio_sound_set_track_position(snd_track_1_high_index, audio_sound_get_track_position(snd_track_1_snare_index));
    high_playing = 1;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
