<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

depth = -1;
key_left = 0;
key_right = 0;
key_up = 0;
key_down = 0;
vmove = 0;
vsp = 0;
move = 0;
hsp = 0;
spd = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_ball</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup Input
//key_left = -keyboard_check(vk_left);
//key_right = keyboard_check(vk_right);
key_up = -keyboard_check(vk_up);
key_down = keyboard_check(vk_down);
//move = key_left + key_right;
vmove = key_up + key_down;
vsp = vmove * spd;
//hsp = move * spd;

//for the map
obj_map.x = obj_map.startX;
obj_map.y = obj_map.startY;
obj_map.key_left = keyboard_check(vk_left);
obj_map.key_right = -keyboard_check(vk_right);
obj_map.move = obj_map.key_left + obj_map.key_right;
obj_map.rsp = obj_map.spd * obj_map.move;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collisions
//Vertical

if (place_meeting(x,y+vsp+(sign(vsp) * 3),obj_map)) {
    while (!place_meeting(x,y+(3 * sign(vsp)),obj_map)) {
        y+=(3 * sign(vsp));
    }
    
    vsp = 0;
}

y+=vsp;

rsp_mult = 3;
if (place_meeting(x+(sign(obj_map.rsp) * rsp_mult),y,obj_map))
{
    while (!place_meeting(x+(sign(obj_map.rsp) * rsp_mult),y,obj_map))
    {
        obj_map.image_angle += sign(obj_map.rsp) * rsp_mult;
    }
    
    obj_map.rsp = 0;
}

obj_map.image_angle+=obj_map.rsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.5</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
